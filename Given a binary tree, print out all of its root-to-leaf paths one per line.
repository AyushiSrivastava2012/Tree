#include <bits/stdc++.h>
using namespace std;

struct node{
	int data;
	struct node* left;
	struct node* right;
};

struct node* newNode(int data){
	struct node* temp=(struct node*)malloc(sizeof(struct node));
	temp->data=data;
	temp->left=NULL;
	temp->right=NULL;
	return temp;
}
void inorder(struct node* root){
	if(root==NULL)return;
	inorder(root->left);
	cout<<root->data<<" ";
	inorder(root->right);
}
int height(struct node* root){
	if(root==NULL)
	return 0;
	return 1+max(height(root->left),height(root->right));
}
void rootToLeaf(struct node* root,int path[],int n){
	if(root->right==NULL && root->left==NULL){
		for(int i=0;i<n;i++)
		cout<<path[i]<<" ";
		cout<<root->data;
		cout<<endl;
		return;
	}
	path[n]=root->data;
	rootToLeaf(root->right,path,n+1);
	rootToLeaf(root->left,path,n+1);
	}
int main() {
	struct node *root = newNode(1);
  	root->left        = newNode(2);
  	root->right       = newNode(3);
  	root->left->left  = newNode(4);
  	root->left->right = newNode(5);  
  	int path[6];
  	rootToLeaf(root,path,0);
	// your code goes here
	return 0;
}
